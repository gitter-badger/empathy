<?php

class stock extends Controller
{ 
  public function default_event()
  {  
    require(DOC_ROOT."/empathy/include/EntityDBMS.php");
    require(DOC_ROOT."/storage/ProductItem.php");
    require(DOC_ROOT."/storage/StockItem.php");
    require(DOC_ROOT."/storage/Colour.php");
    require(DOC_ROOT."/storage/Size.php");

 
    $p = new ProductItem($this);    
    $p->id = $_GET['id'];
    $p->load(ProductItem::$table);
    $p->category_id = $p->convertCategory();
    $this->presenter->assign("product", $p);        

    $s = new StockItem($this);
    $stock = $s->loadAllForProduct($p->id);
    
    $c = new Colour($this);
    $colours = $c->loadIndexed();
    $this->presenter->assign("colours", $colours);

    $i = new Size($this);
    $sizes = $i->loadIndexed();
    $this->presenter->assign("sizes", $sizes);    
    
    for($i = 0; $i < sizeof($stock); $i++)
      {       	
	foreach($stock[$i] as $index => $value)
	  {
	    if(!is_numeric($index))
	      {
		switch($index)
		  {
		  case "size":
		    if($value == "")
		      {
			$stock[$i]['size_lbl'] = "-";
		      }
		    elseif(is_numeric($value))
		      {		
			$stock[$i]['size_lbl'] = $sizes[$value];
		      }		  
		    break;
		  case "colour1":
		    if($value == "")
		      {
			$stock[$i]['colour1_lbl'] = "-";
		      }
		    elseif(is_numeric($value))
		      {
			$stock[$i]['colour1_lbl'] = $colours[$value];
		      }		  
		    break;
		  case "colour2":
		    if($value == "")
		      {
			$stock[$i]['colour2_lbl'] = "-";
		      }
		    elseif(is_numeric($value))
		      {
			$stock[$i]['colour2_lbl'] = $colours[$value];
		      }		  
		    break;
		  default:
		    break;
		  }
	      }
	  }
      }    

    $this->presenter->assign("stock", $stock);        
  }


  public function update()
  {
    require(DOC_ROOT."/empathy/include/EntityDBMS.php");
    require(DOC_ROOT."/storage/StockItem.php");
   
    if(isset($_POST['update_stock']))
      {
	$product_id = $_POST['product_id'];
	$qty = $_POST['qty'];

	$s = new StockItem($this);
	$s->size = $_POST['size'];
	$s->colour1 = $_POST['colour1'];
	$s->colour2 = $_POST['colour2'];	       
	$s->updateByAttribute($product_id, $qty);

	$s->insertByAttribute($product_id, $qty);


	$this->redirect("admin/stock/$product_id");
      }



  }

  
  public function remove()
  {
    require(DOC_ROOT."/empathy/include/EntityDBMS.php");
    require(DOC_ROOT."/storage/ProductItem.php");

    if(!isset($_GET['category']) || !is_numeric($_GET['category']))
    {
      $_GET['category'] = 0;
    }
    
    $p = new ProductItem($this);
    $p->id = $_GET['id'];
    $p->remove();
    $this->redirect("admin/products/?category=".$_GET['category']);    
  }


  
  
  public function edit()
  {
    require(DOC_ROOT."/empathy/include/EntityDBMS.php");
    require(DOC_ROOT."/storage/ProductItem.php");
    require(DOC_ROOT."/storage/Category.php");

    $p = new ProductItem($this);

    if(isset($_POST['submit_product']))
    {     
      $p->id = $_POST['id'];
      $p->load(ProductItem::$table);

      $p->category_id = $_POST['category'];
      $p->name = $_POST['name'];
      $p->description = $_POST['description'];
      $p->sanitize();
      $p->price = $_POST['price'];
      $p->save(ProductItem::$table);
      $this->redirect("admin/products");
    }

    

    $p->id = $_GET['id'];
    $p->load(ProductItem::$table);

    $this->presenter->assign("product", $p);

    $c = new Category($this);
    $category = $c->loadIndexed();

    $this->presenter->assign("categories", $category);

  }

  public function add()
  {
    require(DOC_ROOT."/empathy/include/EntityDBMS.php");
    require(DOC_ROOT."/storage/StockItem.php");
    
    $s = new StockItem($this);

    if(isset($_POST['add_stock']))
      {
	$s->product_id = $_POST['product_id'];
	if($_POST['size'] == 0)
	  {
	    $s->size = "NULL";
	  }
	else
	  {
	    $s->size = $_POST['size'];
	  }
	if($_POST['colour1'] == 0)
	  {
	    $s->colour1 = "NULL";
	  }
	else
	  {
	    $s->colour1 = $_POST['colour1'];
	  }
	if($_POST['colour2'] == 0)
	  {
	    $s->colour2 = "NULL";
	  }
	else
	  {
	    $s->colour2 = $_POST['colour2'];
	  }

	//	print_r($s);
	//	print_r($_POST);

	$s->sanitize();
	$s->create();
		
      }
    $this->redirect("admin/stock/$s->product_id");
  }



}
?>